{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAG/B,EAAQ,SAAS,aAAa,CAAC,SACjC,EAAmB,GACnB,EAAc,CAAA,EAElB,EAAM,gBAAgB,CAAC,QAAS,SAAC,CAAjC,EACE,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,gB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC1C,EAAa,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,WAAW,CAAC,IAAI,GAAG,WAAW,GAExE,EAAc,IAAqB,GAAa,CAAC,EACjD,EAAmB,EACnB,EAAM,SAAS,CAAG,GAElB,EACG,IAAI,CACH,SAAC,CAAA,CAAI,CAFT,EAGM,OAAA,EAAiB,GAAG,CAAC,GAAY,EAAI,GAAO,CAAA,EAAc,EAAI,EAAA,CAEjE,GAAA,OAAO,CAAC,SAAC,CAAT,EAAiB,OAAA,EAAM,WAAW,CAAC,E,EACxC,GAEA,IAAM,EAAmB,IAAI,IAAI,CAC/B,CAAC,OAAQ,SAAC,CAAA,CAAI,CAAL,EAAY,OAAA,EAAe,EAAI,EAAI,E,EAAG,CAC/C,CAAC,WAAY,SAAC,CAAA,CAAI,CAAL,EAAY,OAAA,EAAe,EAAI,EAAI,E,EAAG,CACnD,CAAC,SAAU,SAAC,CAAA,CAAI,CAAL,EAAY,OAAA,EAAe,EAAI,EAAI,E,EAAG,CACjD,CAAC,MAAO,SAAC,CAAA,CAAI,CAAL,EAAY,MAAA,CAAC,EAAG,KAAK,CAAC,EAAE,CAAC,WAAW,CAAG,CAAC,EAAG,KAAK,CAAC,EAAE,CAAC,WAAW,A,EAAC,CACxE,CACE,SACA,SAAC,CAAA,CAAI,CAAL,EACE,MAAA,CAAC,EAAG,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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tBody = document.querySelector(\"tbody\");\n// region SORTING\nvar tHead = document.querySelector(\"thead\");\nvar lastSortedColumn = \"\";\nvar isAscending = true;\ntHead.addEventListener(\"click\", function(e) {\n    var employees = _to_consumable_array(document.querySelectorAll(\"tbody > tr\"));\n    var columnName = e.target.closest(\"th\").textContent.trim().toLowerCase();\n    isAscending = lastSortedColumn === columnName ? !isAscending : true;\n    lastSortedColumn = columnName;\n    tBody.innerHTML = \"\";\n    employees.sort(function(r1, r2) {\n        return compareFunctions.get(columnName)(r1, r2) * (isAscending ? 1 : -1);\n    }).forEach(function(row) {\n        return tBody.appendChild(row);\n    });\n});\nvar compareFunctions = new Map([\n    [\n        \"name\",\n        function(r1, r2) {\n            return compareStrings(r1, r2, 0);\n        }\n    ],\n    [\n        \"position\",\n        function(r1, r2) {\n            return compareStrings(r1, r2, 1);\n        }\n    ],\n    [\n        \"office\",\n        function(r1, r2) {\n            return compareStrings(r1, r2, 2);\n        }\n    ],\n    [\n        \"age\",\n        function(r1, r2) {\n            return +r1.cells[3].textContent - +r2.cells[3].textContent;\n        }\n    ],\n    [\n        \"salary\",\n        function(r1, r2) {\n            return +r1.cells[4].textContent.replace(\"$\", \"\").replace(\",\", \"\") - +r2.cells[4].textContent.replace(\"$\", \"\").replace(\",\", \"\");\n        }\n    ]\n]);\nfunction compareStrings(row1, row2, cellIndex) {\n    return row1.cells[cellIndex].textContent.localeCompare(row2.cells[cellIndex].textContent);\n}\n// endregion\n// region SELECT ROW\nvar selectedRow = null;\ntBody.addEventListener(\"click\", function(e) {\n    var row = e.target.closest(\"tr\");\n    row.classList.toggle(\"active\");\n    if (selectedRow !== row) selectedRow === null || selectedRow === void 0 ? void 0 : selectedRow.classList.remove(\"active\");\n    selectedRow = row;\n});\n// endregion\n// region CREATE FORM\nvar body = document.querySelector(\"body\");\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nform.insertAdjacentHTML(\"beforeend\", '<label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\"></label>');\nform.insertAdjacentHTML(\"beforeend\", '<label>Position: <input data-qa=\"position\" name=\"position\" type=\"text\"></label>');\nform.insertAdjacentHTML(\"beforeend\", '<label>Office: <select data-qa=\"office\" name=\"office\">\\n    <option value=\"Tokyo\">Tokyo</option>\\n    <option value=\"Singapore\">Singapore</option>\\n    <option value=\"London\">London</option>\\n    <option value=\"New York\">New York</option>\\n    <option value=\"Edinburgh\">Edinburgh</option>\\n    <option value=\"San Francisco\">San Francisco</option>\\n    </select></label>');\nform.insertAdjacentHTML(\"beforeend\", '<label>Age: <input data-qa=\"age\" name=\"age\" type=\"number\" min=\"18\" max=\"90\"></label>');\nform.insertAdjacentHTML(\"beforeend\", '<label>Salary: <input data-qa=\"salary\" name=\"salary\" type=\"number\"></label>');\nform.insertAdjacentHTML(\"beforeend\", '<button class=\"button button--save\" type=\"button\">Save to table</button>');\nbody.appendChild(form);\n// endregion\n// region SAVE EMPLOYEE\nvar saveButton = document.querySelector(\".button--save\");\nsaveButton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var nameVal = document.querySelector('input[name=\"name\"]').value;\n    var positionVal = document.querySelector('input[name=\"position\"]').value;\n    var officeVal = document.querySelector('select[name=\"office\"]').value;\n    var ageVal = document.querySelector('input[name=\"age\"]').value;\n    var salaryVal = document.querySelector('input[name=\"salary\"]').value;\n    if (!validateForm(nameVal, positionVal, ageVal, salaryVal)) return;\n    tBody.insertAdjacentHTML(\"beforeend\", \"<tr><td>\".concat(nameVal, \"</td><td>\").concat(positionVal, \"</td><td>\").concat(officeVal, \"</td><td>\").concat(ageVal, \"</td>\\n      <td>$\").concat((+salaryVal).toLocaleString(\"ua-US\"), \"</td></tr>\"));\n    form.reset();\n    pushNotification(500, 100, \"Saved!\", \"Employee \".concat(nameVal, \" successfully saved.\"), \"success\");\n});\nfunction validateForm(nameVal, positionVal, ageVal, salaryVal) {\n    if (!nameVal || !positionVal || !ageVal || !salaryVal) {\n        pushNotification(500, 100, \"Error!\", \"Fill in all fields.\", \"error\");\n        return false;\n    }\n    if (nameVal.length < 4) {\n        pushNotification(500, 100, \"Error!\", \"The name is too short. 4 letters minimum.\", \"error\");\n        return false;\n    }\n    if (+ageVal < 18 || +ageVal > 90) {\n        pushNotification(500, 100, \"Error!\", \"Age should be in range [18, 90].\", \"error\");\n        return false;\n    }\n    return true;\n}\nfunction pushNotification(posTop, posRight, title, description, type) {\n    var notificationEl = document.createElement(\"div\");\n    var titleEl = document.createElement(\"h2\");\n    var descriptionEl = document.createElement(\"p\");\n    notificationEl.className = \"notification \" + type;\n    notificationEl.setAttribute(\"data-qa\", \"notification\");\n    notificationEl.style.top = posTop + \"px\";\n    notificationEl.style.right = posRight + \"px\";\n    titleEl.className = \"title\";\n    titleEl.textContent = title;\n    descriptionEl.textContent = description;\n    notificationEl.append(titleEl);\n    notificationEl.append(descriptionEl);\n    document.body.append(notificationEl);\n    setTimeout(function() {\n        notificationEl.outerHTML = \"\";\n    }, 5000);\n}\n// endregion\n// region EDIT CELL\ntBody.addEventListener(\"dblclick\", function(e) {\n    var cell = e.target.closest(\"td\");\n    var cellValue = cell.textContent;\n    var input = document.createElement(\"input\");\n    cell.textContent = \"\";\n    input.classList.add(\"cell-input\");\n    input.type = \"text\";\n    cell.appendChild(input);\n    input.focus();\n    input.addEventListener(\"blur\", function() {\n        var inputValue = input.value;\n        if (!inputValue.trim()) inputValue = cellValue;\n        cell.textContent = inputValue;\n    });\n    input.addEventListener(\"keypress\", function(innerE) {\n        if ([\n            \"Enter\",\n            \"NumpadEnter\"\n        ].includes(innerE.code)) input.blur();\n    });\n}); // endregion\n\n//# sourceMappingURL=index.0ae39f60.js.map\n","'use strict';\n\nconst tBody = document.querySelector('tbody');\n\n// region SORTING\nconst tHead = document.querySelector('thead');\nlet lastSortedColumn = '';\nlet isAscending = true;\n\ntHead.addEventListener('click', (e) => {\n  const employees = [...document.querySelectorAll('tbody > tr')];\n  const columnName = e.target.closest('th').textContent.trim().toLowerCase();\n\n  isAscending = lastSortedColumn === columnName ? !isAscending : true;\n  lastSortedColumn = columnName;\n  tBody.innerHTML = '';\n\n  employees\n    .sort(\n      (r1, r2) =>\n        compareFunctions.get(columnName)(r1, r2) * (isAscending ? 1 : -1),\n    )\n    .forEach((row) => tBody.appendChild(row));\n});\n\nconst compareFunctions = new Map([\n  ['name', (r1, r2) => compareStrings(r1, r2, 0)],\n  ['position', (r1, r2) => compareStrings(r1, r2, 1)],\n  ['office', (r1, r2) => compareStrings(r1, r2, 2)],\n  ['age', (r1, r2) => +r1.cells[3].textContent - +r2.cells[3].textContent],\n  [\n    'salary',\n    (r1, r2) =>\n      +r1.cells[4].textContent.replace('$', '').replace(',', '') -\n      +r2.cells[4].textContent.replace('$', '').replace(',', ''),\n  ],\n]);\n\nfunction compareStrings(row1, row2, cellIndex) {\n  return row1.cells[cellIndex].textContent.localeCompare(\n    row2.cells[cellIndex].textContent,\n  );\n}\n// endregion\n\n// region SELECT ROW\nlet selectedRow = null;\n\ntBody.addEventListener('click', (e) => {\n  const row = e.target.closest('tr');\n\n  row.classList.toggle('active');\n\n  if (selectedRow !== row) {\n    selectedRow?.classList.remove('active');\n  }\n  selectedRow = row;\n});\n// endregion\n\n// region CREATE FORM\nconst body = document.querySelector('body');\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Name: <input data-qa=\"name\" name=\"name\" type=\"text\"></label>`,\n);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Position: <input data-qa=\"position\" name=\"position\" type=\"text\"></label>`,\n);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Office: <select data-qa=\"office\" name=\"office\">\n    <option value=\"Tokyo\">Tokyo</option>\n    <option value=\"Singapore\">Singapore</option>\n    <option value=\"London\">London</option>\n    <option value=\"New York\">New York</option>\n    <option value=\"Edinburgh\">Edinburgh</option>\n    <option value=\"San Francisco\">San Francisco</option>\n    </select></label>`,\n);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Age: <input data-qa=\"age\" name=\"age\" type=\"number\" min=\"18\" max=\"90\"></label>`,\n);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<label>Salary: <input data-qa=\"salary\" name=\"salary\" type=\"number\"></label>`,\n);\n\nform.insertAdjacentHTML(\n  'beforeend',\n  `<button class=\"button button--save\" type=\"button\">Save to table</button>`,\n);\n\nbody.appendChild(form);\n// endregion\n\n// region SAVE EMPLOYEE\nconst saveButton = document.querySelector('.button--save');\n\nsaveButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const nameVal = document.querySelector('input[name=\"name\"]').value;\n  const positionVal = document.querySelector('input[name=\"position\"]').value;\n  const officeVal = document.querySelector('select[name=\"office\"]').value;\n  const ageVal = document.querySelector('input[name=\"age\"]').value;\n  const salaryVal = document.querySelector('input[name=\"salary\"]').value;\n\n  if (!validateForm(nameVal, positionVal, ageVal, salaryVal)) {\n    return;\n  }\n\n  tBody.insertAdjacentHTML(\n    'beforeend',\n    `<tr><td>${nameVal}</td><td>${positionVal}</td><td>${officeVal}</td><td>${ageVal}</td>\n      <td>$${(+salaryVal).toLocaleString('ua-US')}</td></tr>`,\n  );\n\n  form.reset();\n\n  pushNotification(\n    500,\n    100,\n    'Saved!',\n    `Employee ${nameVal} successfully saved.`,\n    'success',\n  );\n});\n\nfunction validateForm(nameVal, positionVal, ageVal, salaryVal) {\n  if (!nameVal || !positionVal || !ageVal || !salaryVal) {\n    pushNotification(500, 100, 'Error!', 'Fill in all fields.', 'error');\n\n    return false;\n  }\n\n  if (nameVal.length < 4) {\n    pushNotification(\n      500,\n      100,\n      'Error!',\n      'The name is too short. 4 letters minimum.',\n      'error',\n    );\n\n    return false;\n  }\n\n  if (+ageVal < 18 || +ageVal > 90) {\n    pushNotification(\n      500,\n      100,\n      'Error!',\n      'Age should be in range [18, 90].',\n      'error',\n    );\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction pushNotification(posTop, posRight, title, description, type) {\n  const notificationEl = document.createElement('div');\n  const titleEl = document.createElement('h2');\n  const descriptionEl = document.createElement('p');\n\n  notificationEl.className = 'notification ' + type;\n  notificationEl.setAttribute('data-qa', 'notification');\n  notificationEl.style.top = posTop + 'px';\n  notificationEl.style.right = posRight + 'px';\n  titleEl.className = 'title';\n  titleEl.textContent = title;\n  descriptionEl.textContent = description;\n\n  notificationEl.append(titleEl);\n  notificationEl.append(descriptionEl);\n  document.body.append(notificationEl);\n\n  setTimeout(() => {\n    notificationEl.outerHTML = '';\n  }, 5000);\n}\n// endregion\n\n// region EDIT CELL\ntBody.addEventListener('dblclick', (e) => {\n  const cell = e.target.closest('td');\n\n  const cellValue = cell.textContent;\n  const input = document.createElement('input');\n\n  cell.textContent = '';\n  input.classList.add('cell-input');\n  input.type = 'text';\n  cell.appendChild(input);\n  input.focus();\n\n  input.addEventListener('blur', () => {\n    let inputValue = input.value;\n\n    if (!inputValue.trim()) {\n      inputValue = cellValue;\n    }\n\n    cell.textContent = inputValue;\n  });\n\n  input.addEventListener('keypress', (innerE) => {\n    if (['Enter', 'NumpadEnter'].includes(innerE.code)) {\n      input.blur();\n    }\n  });\n});\n// endregion\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tBody","document","querySelector","tHead","lastSortedColumn","isAscending","addEventListener","e","employees","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","columnName","target","closest","textContent","trim","toLowerCase","innerHTML","sort","r1","r2","compareFunctions","get","forEach","row","appendChild","Map","compareStrings","cells","replace","row1","row2","cellIndex","localeCompare","selectedRow","classList","toggle","remove","body","form","createElement","pushNotification","posTop","posRight","title","description","type","notificationEl","titleEl","descriptionEl","className","setAttribute","style","top","right","append","setTimeout","outerHTML","add","insertAdjacentHTML","saveButton","preventDefault","nameVal","value","positionVal","officeVal","ageVal","salaryVal","concat","toLocaleString","reset","cell","cellValue","input","focus","inputValue","innerE","includes","code","blur"],"version":3,"file":"index.0ae39f60.js.map"}